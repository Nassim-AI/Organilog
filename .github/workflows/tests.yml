name: Tests Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Tests PHP avec PHPUnit
  php-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: pdo, pdo_mysql, curl, json
          coverage: xdebug

      - name: Install PHP dependencies
        run: |
          cd backend
          composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: "test_interventions"
          mysql user: "test_user"
          mysql password: "test_password"

      - name: Wait for MySQL
        run: sleep 10

      - name: Setup test database
        run: |
          cd backend
          mysql -h 127.0.0.1 -u test_user -ptest_password test_interventions < ../database/init.sql || true

      - name: Run PHPUnit tests
        run: |
          cd backend
          ./vendor/bin/phpunit --testdox --coverage-text
        env:
          DB_HOST: 127.0.0.1
          DB_NAME: test_interventions
          DB_USER: test_user
          DB_PASS: test_password

  # Tests React avec Jest
  react-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run Jest tests
        run: |
          cd frontend
          npm run test -- --coverage --watchAll=false

      - name: Upload Jest coverage
        uses: codecov/codecov-action@v3
        with:
          file: frontend/coverage/lcov.info
          flags: jest
          name: jest-coverage

  # Résumé des tests
  tests-summary:
    runs-on: ubuntu-latest
    needs: [php-tests, react-tests]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "PHP Tests: ${{ needs.php-tests.result }}"
          echo "React Tests: ${{ needs.react-tests.result }}"

          if [[ "${{ needs.php-tests.result }}" == "success" && "${{ needs.react-tests.result }}" == "success" ]]; then
            echo "✅ Tous les tests sont passés !"
            exit 0
          else
            echo "❌ Certains tests ont échoué"
            exit 1
          fi
